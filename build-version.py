import subprocess
import os
import filecmp

Import("env")

tmp_file="src/.version.h"
dst_file="src/version.h"
#ret = subprocess.run(["git", "describe"], stdout=subprocess.PIPE, text=True) #Uses only annotated tags
ret = subprocess.run(["git", "describe", "--tags"], stdout=subprocess.PIPE, text=True) #Uses any tags
build_version = ret.stdout.strip()
if build_version == "":
    build_version = "v0.0.0"
ret = subprocess.run(["git", "branch", "--show-current"], stdout=subprocess.PIPE, text=True)
branch_name = ret.stdout.strip()
if branch_name != "main":
    build_version = build_version+"-"+branch_name
#git diff-index --quiet HEAD
ret = subprocess.run(["git", "diff-index", "--quiet", "HEAD"])
if ret.returncode != 0:
    build_version = build_version+" (dirty)"
with open(tmp_file, "w") as f:
    print("/* DO NOT EDIT this autogenerated file */", file=f)
    print("#pragma once", file=f)
    print("#define BUILD_VERSION \""+build_version+"\"", file=f)

if os.path.isfile(dst_file) and filecmp.cmp(tmp_file, dst_file, shallow=False):
    print ("Firmware Revision: " + build_version + " (unchanged)")
    os.remove(tmp_file)
else:
    print ("Firmware Revision: " + build_version)
    os.rename(tmp_file, dst_file)
